{"version":3,"sources":["webpack:///./src/components/anchor.js","webpack:///./src/components/contact-lines.js","webpack:///./src/components/image.js","webpack:///./src/components/section.js","webpack:///./src/components/icon-print.js","webpack:///./src/components/titles-block.js","webpack:///./src/components/contacts.js","webpack:///./src/components/container.js","webpack:///./src/components/ditailed-line.js","webpack:///./src/components/education.js","webpack:///./src/components/experience.js","webpack:///./src/components/global-styles.js","webpack:///./src/components/languages.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/skill-lines.js","webpack:///./src/components/skills.js","webpack:///./src/components/summary.js","webpack:///./src/theme.js","webpack:///./src/templates/index.js"],"names":["Anchor","styled","a","withConfig","displayName","componentId","_ref","theme","color","anchor","DefinitionList","dl","spacing","_ref2","DefinitionTitle","dt","DefinitionData","dd","ContactLines","_ref3","definitions","react_default","createElement","map","_ref4","title","value","react","key","shortid","generate","Image","style","data","_1931688237","gatsby_image_default","fluid","placeholderImage","childImageSharp","alt","Object","assign","maxWidth","defaultProps","Section","section","TitleWrapper","div","DetailsWrapper","Title","h2","fontSize","TitleText","span","_ref5","icon","SectionCmp","_ref6","children","titleRender","TitleTextCmp","TitleCmp","IconPrint","FaPrint","TitleBlock","TitlesWrapper","TitleName","h1","TitlePosition","opacity","text","TitlesBlock","_ref7","name","position","icon_print","onClick","window","print","ContactsInner","ImageWrapper","Contacts","contacts","location","phone","email","linkedin","github","twitter","nickname","components_image","Fragment","titles_block","contact_lines","index_esm","components_anchor","href","target","LineWrapper","Organization","Period","DescriptionText","p","DetailedLine","organization","organizationRef","period","description","Education","education","ditailed_line","Experience","experience","GlobalStyle","createGlobalStyle","_templateObject","background","fontFamily","ibmPlexSansCondensed","letterSpacing","lineHeight","Languages","languages","Main","main","Layout","container","dist","global_styles","Seo","lang","meta","site","_2417117884","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","ul","DefinitionItem","li","h3","DefinitionDataList","DefinitionDataItem","SkillLines","skill_lines_DefinitionList","skill_lines_DefinitionTitle","Skills","skills","skill_lines","SummaryText","Summary","summary","IndexPage","_pageContext$index","pageContext","index","styled_components_browser_esm","layout","seo","components_contacts","components_summary","components_skills","components_experience","components_education","components_languages"],"mappings":"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","file":"component---src-templates-index-js-75ffe9814aa4dd58ed5e.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Anchor = styled.a`\n  color: ${({ theme }) => theme.color.anchor};\n`\n\nexport default Anchor\n","import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport shortid from \"shortid\"\nimport styled from \"styled-components\"\n\nconst DefinitionList = styled.dl`\n  display: grid;\n  grid-template-columns: max-content auto;\n  grid-auto-rows: max-content;\n  align-items: center;\n  column-gap: ${({ theme }) => theme.spacing[2]};\n  row-gap: ${({ theme }) => theme.spacing[1]};\n  margin: 0;\n`\n\nconst DefinitionTitle = styled.dt`\n  display: grid;  \n  justify-self: start;\n  align-self: center;\n  font-weight: bolder;\n`\n\nconst DefinitionData = styled.dd`\n  margin-inline-start: 0;\n  display: grid;\n  justify-self: start;\n  align-self: center;\n`\n\nconst ContactLines = ({ definitions }) => (\n  <DefinitionList>\n    {definitions.map(({ title, value }) => (\n      <Fragment key={shortid.generate()}>\n        <DefinitionTitle>{title}</DefinitionTitle>\n        <DefinitionData>{value}</DefinitionData>\n      </Fragment>\n    ))}\n  </DefinitionList>\n)\n\nContactLines.propTypes = {\n  definitions: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    }),\n  ).isRequired,\n}\n\nexport default ContactLines\n","import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Image = ({ style }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"profile-photo.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img\n    fluid={data.placeholderImage.childImageSharp.fluid}\n    alt=\"profile-image\"\n    style={{\n      maxWidth: `100%`,\n      ...style\n    }}\n  />\n}\n\nImage.defaultProps = {\n  style: {}\n}\n\nImage.propTypes = {\n  style: PropTypes.shape({})\n}\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Section = styled.section`\n  display: grid;\n  grid-template-columns: 20rem auto;\n  margin-bottom: ${({ theme }) => theme.spacing[8]};\n  \n  @media print {\n    margin-bottom: ${({ theme }) => theme.spacing[4]};\n  }\n`\n\nconst TitleWrapper = styled.div``\n\nconst DetailsWrapper = styled.div``\n\nconst Title = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: ${({ theme }) => theme.fontSize[5]};\n  margin: 0 0 ${({ theme }) => theme.spacing[5]};\n  font-weight: bold;\n`\n\nconst TitleText = styled.span`\n  margin-left: ${({ theme, icon }) => icon ? theme.spacing[2] : 0};\n`\n\nconst SectionCmp = ({ title, icon, children, titleRender }) => {\n  const TitleTextCmp = title && <TitleText icon={icon}>{title}</TitleText>\n  const TitleCmp = (icon || title) && <Title>{icon}{TitleTextCmp}</Title>\n\n  return (\n    <Section>\n      <TitleWrapper>{titleRender || TitleCmp}</TitleWrapper>\n      <DetailsWrapper>{children}</DetailsWrapper>\n    </Section>\n  )\n}\n\nSectionCmp.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.string,\n  titleRender: PropTypes.node,\n  children: PropTypes.node.isRequired,\n}\n\nSectionCmp.defaultProps = {\n  titleRender: null,\n  icon: null,\n  title: null,\n}\n\nexport default SectionCmp\n","import styled from \"styled-components\"\nimport { FaPrint } from \"react-icons/fa\"\n\nconst IconPrint = styled(FaPrint)`\n  font-size: ${({ theme }) => theme.fontSize[5]};\n  &:hover {\n    cursor: pointer;\n  }\n  @media print {\n    display: none;\n  }\n`\n\nexport default IconPrint\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\"\nimport IconPrint from \"./icon-print\"\n\nconst TitleBlock = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 0 ${({ theme }) => theme.spacing[1]};\n`\n\nconst TitlesWrapper = styled.div`\n  display: grid;\n  row-gap: ${({ theme }) => theme.spacing[1]};\n  margin-bottom: ${({ theme }) => theme.spacing[1]};\n`\n\nconst TitleName = styled.h1`\n  font-size: ${({ theme }) => theme.fontSize[9]};\n  font-weight: bold;\n  margin: 0;\n`\n\nconst TitlePosition = styled.h2`\n  font-size: ${({ theme }) => theme.fontSize[4]};\n  font-weight: bold;\n  opacity: ${({ theme }) => theme.opacity.text};\n  margin: 0;\n`\n\nconst TitlesBlock = ({ name, position }) => {\n  const onPrint = () => {\n    window.print()\n  }\n\n  return (\n    <TitleBlock>\n      <TitlesWrapper>\n        <TitleName>{name}</TitleName>\n        <TitlePosition>{position}</TitlePosition>\n      </TitlesWrapper>\n      <IconPrint onClick={onPrint} title='Print CV'/>\n    </TitleBlock>\n  )\n}\n\nTitlesBlock.propTypes = {\n  name: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n}\n\nexport default TitlesBlock\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport { FaTwitter, FaGithub, FaLinkedin, FaMapMarkerAlt, FaEnvelope, FaMobileAlt } from \"react-icons/fa\"\nimport Image from \"./image\"\nimport ContactLines from \"./contact-lines\"\nimport Anchor from \"./anchor\"\nimport Section from \"./section\"\nimport TitlesBlock from \"./titles-block\"\n\nconst ContactsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  justify-content: start;\n  column-gap: ${({ theme }) => theme.spacing[8]};\n`\n\nconst ImageWrapper = styled.div`\n  height: 16.5rem;\n  width: 16.5rem;\n  border-radius: 50%;\n  overflow: hidden;\n`\n\nconst Contacts = ({ contacts, theme }) => {\n  const { name, position, location, phone, email, linkedin, github, twitter, nickname } = contacts\n\n  return (\n    <Section titleRender={(\n      <ImageWrapper theme={theme}>\n        <Image/>\n      </ImageWrapper>\n    )}>\n      <>\n        <TitlesBlock position={position} name={name}/>\n        <ContactsInner>\n          <ContactLines\n            definitions={[\n              { title: <FaMapMarkerAlt/>, value: location },\n              { title: <FaMobileAlt/>, value: <Anchor href={`tel:${phone}?call`}>{phone}</Anchor> },\n              { title: <FaEnvelope/>, value: <Anchor href={`mailto:${email}`}>{email}</Anchor> },\n            ]}\n          />\n          <ContactLines\n            definitions={[\n              {\n                title: <FaLinkedin/>,\n                value: <Anchor href={linkedin} target='_blank'>{nickname}</Anchor>,\n              }, {\n                title: <FaGithub/>,\n                value: <Anchor href={github} target='_blank'>{nickname}</Anchor>,\n              }, {\n                title: <FaTwitter/>,\n                value: <Anchor href={twitter} target='_blank'>{nickname}</Anchor>,\n              },\n            ]}\n          />\n        </ContactsInner>\n      </>\n    </Section>\n  )\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.shape({\n    location: PropTypes.string.isRequired,\n    nickname: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    linkedin: PropTypes.string.isRequired,\n    github: PropTypes.string.isRequired,\n    twitter: PropTypes.string.isRequired,\n    telegram: PropTypes.string.isRequired,\n  }),\n}\n\nexport default Contacts\n","import styled from \"styled-components\"\n\nexport default styled.div`\n   width: 100%;\n   margin: 0 auto;\n   padding: ${({ theme }) => `0 ${theme.spacing[3]} ${theme.spacing[5]}`};\n   \n   @media (min-width: 576px) {\n    max-width: 54rem;\n   }\n   \n   @media (min-width: 768px) {\n     max-width: 72rem;\n   }\n   \n   @media (min-width: 992px) {\n     max-width: 96rem;\n   }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Anchor from \"./anchor\"\n\nconst LineWrapper = styled.div`\n  margin-bottom: ${({ theme }) => theme.spacing[5]};\n  display: grid;\n  row-gap: ${({ theme }) => theme.spacing[0]};\n`\n\nconst Organization = styled.div`\n  font-weight: bold;\n  font-size: ${({ theme }) => theme.fontSize[3]};\n`\n\nconst Period = styled.span`\n  opacity: ${({ theme }) => theme.opacity.text};\n`\n\nconst DescriptionText = styled.p`\n  text-align: justify;\n  margin: 0;\n`\n\nconst DetailedLine = ({ organization, organizationRef, period, position, description }) => (\n  <LineWrapper>\n    <Period>{period}</Period>\n    <Organization>\n      <Anchor href={organizationRef} target='_blank'>{organization}</Anchor>\n      {' — '}\n      <span>{position}</span>\n    </Organization>\n    <DescriptionText>\n      {description}\n    </DescriptionText>\n  </LineWrapper>\n)\n\nDetailedLine.propTypes = {\n  organization: PropTypes.string.isRequired,\n  organizationRef: PropTypes.string.isRequired,\n  period: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n}\n\nexport default DetailedLine\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport { FaUniversity } from \"react-icons/fa\"\nimport Section from \"./section\"\nimport DetailedLine from \"./ditailed-line\"\n\nconst Education = ({ education }) => (\n  <Section title=\"Education\" icon={<FaUniversity/>}>\n    {education.map(({ organization, organizationRef, period, position, description }) => (\n      <DetailedLine\n        key={organization}\n        organizationRef={organizationRef}\n        organization={organization}\n        period={period}\n        position={position}\n        description={description}\n      />\n    ))}\n  </Section>\n)\n\nEducation.propTypes = {\n  education: PropTypes.arrayOf(PropTypes.shape({\n    organization: PropTypes.string.isRequired,\n    period: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  })).isRequired,\n}\n\nexport default Education\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport { FaBriefcase } from \"react-icons/fa\"\nimport DetailedLine from './ditailed-line';\nimport Section from \"./section\"\n\nconst Experience = ({ experience }) => (\n  <Section title=\"Experience\" icon={<FaBriefcase/>}>\n    {experience.map(({ organization, organizationRef, period, position, description }) => (\n      <DetailedLine\n        key={organization}\n        organizationRef={organizationRef}\n        organization={organization}\n        period={period}\n        position={position}\n        description={description}\n      />\n    ))}\n  </Section>\n)\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(PropTypes.shape({\n    organization: PropTypes.string.isRequired,\n    period: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  })).isRequired,\n}\n\nexport default Experience\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    font-size: 62.5%;\n  }\n\n  body {\n    overflow-x: hidden;\n    background: ${({ theme }) => theme.color.background};\n    color: ${({ theme }) => theme.color.text};\n    font-family: ${({ theme }) => theme.fontFamily.ibmPlexSansCondensed}, sans-serif;\n    font-size: ${({ theme }) => theme.fontSize[2]};\n  } \n  \n  * {\n    box-sizing: border-box;\n    letter-spacing: ${({ theme }) => theme.letterSpacing[3]};\n    line-height: ${({ theme }) => theme.lineHeight[1]};\n  }\n  \n  a { \n    text-decoration: none;\n  }\n`\n\nexport default GlobalStyle\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { FaGlobe } from \"react-icons/fa\"\nimport Section from \"./section\"\nimport ContactLines from \"./contact-lines\"\n\nconst Languages = ({ languages }) => (\n  <Section title=\"Languages\" icon={<FaGlobe/>}>\n    <ContactLines definitions={languages}/>\n  </Section>\n)\n\nLanguages.propTypes = {\n  languages: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string,\n    value: PropTypes.string,\n  })).isRequired,\n}\n\nexport default Languages\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Container from \"./container\"\nimport GlobalStyle from \"./global-styles\"\nimport { Normalize } from \"styled-normalize\"\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n  margin-top: ${({ theme }) => theme.spacing[5]};\n`;\n\nconst Layout = ({ children }) => (\n  <Container>\n    <Normalize/>\n    <GlobalStyle/>\n    <Main>{children}</Main>\n  </Container>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport shortid from \"shortid\"\nimport styled from \"styled-components\"\n\nconst DefinitionList = styled.ul`\n  display: grid;\n  list-style: none;\n  grid-template-columns: repeat(4, max-content);\n  grid-auto-rows: max-content;\n  column-gap: ${({ theme }) => theme.spacing[9]};\n  row-gap: ${({ theme }) => theme.spacing[3]};\n  margin: 0;\n  padding: 0;\n  \n  @media print {\n    grid-template-columns: repeat(3, max-content);\n  }\n`\n\nconst DefinitionItem = styled.li`\n`\n\nconst DefinitionTitle = styled.h3`\n  font-weight: bolder;\n  margin: 0 0 ${({ theme }) => theme.spacing[2]};\n`\n\nconst DefinitionDataList = styled.ul`\n  padding: 0 0 0 ${({ theme }) => theme.spacing[3]};\n  list-style: initial;\n`\n\nconst DefinitionDataItem = styled.li`\n`\n\nconst SkillLines = ({ definitions }) => (\n  <DefinitionList>\n    {definitions.map(({ title, value }) => (\n      <DefinitionItem key={shortid.generate()}>\n        <DefinitionTitle>{title}</DefinitionTitle>\n        <DefinitionDataList>{value.map(name => (\n          <DefinitionDataItem key={name}>{name}</DefinitionDataItem>\n        ))}</DefinitionDataList>\n      </DefinitionItem>\n    ))}\n  </DefinitionList>\n)\n\nSkillLines.propTypes = {\n  definitions: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n      value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    }),\n  ).isRequired,\n}\n\nexport default SkillLines\n","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport { FaCode } from \"react-icons/fa\"\nimport Section from \"./section\"\nimport SkillLines from \"./skill-lines\"\n\nconst Skills = ({ skills }) => (\n  <Section title=\"Skills\" icon={<FaCode/>}>\n    <SkillLines definitions={skills}/>\n  </Section>\n)\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n  })).isRequired\n}\n\nexport default Skills\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { FaEdit } from \"react-icons/fa\"\nimport Section from \"./section\"\nimport styled from 'styled-components';\n\nconst SummaryText = styled.p`\n  text-align: justify;\n  margin: 0;\n`;\n\nconst Summary = ({ summary }) => (\n  <Section title=\"Summary\" icon={<FaEdit/>}>\n    <SummaryText>{summary}</SummaryText>\n  </Section>\n)\n\nSummary.propTypes = {\n  summary: PropTypes.string.isRequired,\n}\n\nexport default Summary\n","const theme = {\n  color: {\n    background: \"#fff\",\n    text: \"#333\",\n    anchor: \"#1E779F\",\n  },\n  fontFamily: {\n    ibmPlexSansCondensed: \"ibm plex sans condensed\",\n  },\n  fontSize: [\n    \"1.2rem\",\n    \"1.4rem\",\n    \"1.6rem\",\n    \"1.8rem\",\n    \"2rem\",\n    \"2.4rem\",\n    \"2.8rem\",\n    \"3rem\",\n    \"3.2rem\",\n    \"3.6rem\",\n    \"4rem\",\n  ],\n  spacing: [\n    \".4rem\",\n    \".8rem\",\n    \"1.2rem\",\n    \"1.6rem\",\n    \"2rem\",\n    \"2.4rem\",\n    \"2.8rem\",\n    \"3.2rem\",\n    \"3.6rem\",\n    \"4rem\",\n  ],\n  letterSpacing: [\n    \".02rem\",\n    \".04rem\",\n    \".06rem\",\n    \".08rem\",\n    \".1rem\",\n    \".12rem\",\n    \".14rem\",\n    \".16rem\",\n    \".18rem\",\n    \".2rem\",\n  ],\n  lineHeight: [\n    \"2rem\",\n    \"2.4rem\",\n    \"2.6rem\",\n    \"2.8rem\",\n    \"3rem\"\n  ],\n  opacity: {\n    text: 0.5\n  }\n}\n\nexport default theme;\n","import React from \"react\"\nimport { ThemeProvider } from \"styled-components\"\nimport { Layout, Seo, Education, Skills, Experience, Languages, Summary, Contacts } from \"../components\"\nimport theme from \"../theme\"\n\nconst IndexPage = ({ pageContext }) => {\n  const { contacts, summary, skills, experience, education, languages } = pageContext.index\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <Seo title=\"CV\"/>\n        <Contacts contacts={contacts}/>\n        <Summary summary={summary}/>\n        <Skills skills={skills}/>\n        <Experience experience={experience}/>\n        <Education education={education}/>\n        <Languages languages={languages}/>\n      </Layout>\n    </ThemeProvider>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}