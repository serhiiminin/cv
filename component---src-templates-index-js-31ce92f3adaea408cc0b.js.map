{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/contacts.js","webpack:///./src/components/container.js","webpack:///./src/components/section.js","webpack:///./src/components/education.js","webpack:///./src/components/experience.js","webpack:///./src/components/languages.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/skills.js","webpack:///./src/components/summary.js","webpack:///./src/templates/index.js"],"names":["Image","_ref","style","data","_1931688237","react_default","a","createElement","gatsby_image_default","fluid","placeholderImage","childImageSharp","alt","Object","assign","maxWidth","defaultProps","Section","styled","section","withConfig","displayName","componentId","ImageWrapper","div","Contacts","contacts","name","position","location","phone","email","linkedin","github","twitter","telegram","contacts_Section","components_image","Title","h2","Data","title","icon","children","Education","index_esm","Experience","Languages","Layout","container","Seo","description","lang","meta","site","_2417117884","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","Skills","Summary","summary","IndexPage","_pageContext$index","pageContext","index","skills","experience","education","languages","components_layout","seo","components_contacts","components_summary","components_skills","components_experience","components_education","components_languages"],"mappings":"yKAKMA,EAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACTC,EAAIC,EAAAD,KAYV,OAAOE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACLG,MAAON,EAAKO,iBAAiBC,gBAAgBF,MAC7CG,IAAI,gBACJV,MAAKW,OAAAC,OAAA,CACHC,SAAQ,QACLb,MAKTF,EAAMgB,aAAe,CACnBd,MAAO,IAMMF,QC9BTiB,EAAUC,IAAOC,QAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,mFAOPK,EAAeL,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,iEA4CHO,EArCE,SAAAxB,GAAkB,IAAfyB,EAAezB,EAAfyB,SACVC,EAAgFD,EAAhFC,KAAMC,EAA0EF,EAA1EE,SAAUC,EAAgEH,EAAhEG,SAAUC,EAAsDJ,EAAtDI,MAAOC,EAA+CL,EAA/CK,MAAOC,EAAwCN,EAAxCM,SAAUC,EAA8BP,EAA9BO,OAAQC,EAAsBR,EAAtBQ,QAASC,EAAaT,EAAbS,SAE3E,OACE9B,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAACgB,EAAD,KACElB,EAAAC,EAAAC,cAAC8B,EAAD,OAEFhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKoB,GACLtB,EAAAC,EAAAC,cAAA,UAAKqB,GACLvB,EAAAC,EAAAC,cAAA,wBAAgBsB,GAChBxB,EAAAC,EAAAC,cAAA,qBAAauB,GACbzB,EAAAC,EAAAC,cAAA,qBAAawB,GACb1B,EAAAC,EAAAC,cAAA,wBAAgByB,GAChB3B,EAAAC,EAAAC,cAAA,sBAAc0B,GACd5B,EAAAC,EAAAC,cAAA,uBAAe2B,GACf7B,EAAAC,EAAAC,cAAA,wBAAgB4B,MClCTjB,MAAOM,IAAtBJ,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAeJ,CAAf,yECEMoB,EAAQpB,IAAOqB,GAAVnB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,uDAMLsB,EAAOtB,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,yCAiBKD,EAZC,SAAAhB,GAAA,IAAGwC,EAAHxC,EAAGwC,MAAOC,EAAVzC,EAAUyC,KAAMC,EAAhB1C,EAAgB0C,SAAhB,OACdtC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC+B,EAAD,KAAQI,EAAKrC,EAAAC,EAAAC,cAAA,YAAOkC,IACpBpC,EAAAC,EAAAC,cAACiC,EAAD,KAAOG,KCLIC,EATG,kBAChBvC,EAAAC,EAAAC,cAACY,EAAD,CACEsB,MAAM,YACNC,KAAMrC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,OAFR,yBCQaC,EATI,kBACjBzC,EAAAC,EAAAC,cAACY,EAAD,CACEsB,MAAM,aACNC,KAAMrC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,OAFR,0BCQaE,EATG,kBAChB1C,EAAAC,EAAAC,cAACY,EAAD,CACEsB,MAAM,YACNC,KAAMrC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,OAFR,yBCUaG,UAVA,SAAA/C,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAH,OACbtC,EAAAC,EAAAC,cAAC0C,EAAD,KACE5C,EAAAC,EAAAC,cAAA,YAAOoC,iCCFLO,EAAM,SAAAjD,GAAwC,IAArCkD,EAAqClD,EAArCkD,YAAaC,EAAwBnD,EAAxBmD,KAAMC,EAAkBpD,EAAlBoD,KAAMZ,EAAYxC,EAAZwC,MAC9Ba,EAD0CC,EAAApD,KAC1CmD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE9C,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CACEqD,eAAgB,CAAEP,QAClBX,MAAOA,EACPmB,cAAa,QAAUN,EAAKG,aAAahB,MACzCY,KAAM,CACJ,CACE1B,KAAI,cACJkC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACElC,KAAI,eACJkC,QAAO,WAET,CACElC,KAAI,kBACJkC,QAASP,EAAKG,aAAaM,QAE7B,CACEpC,KAAI,gBACJkC,QAASpB,GAEX,CACEd,KAAI,sBACJkC,QAASL,IAEXQ,OAAOX,MAKfH,EAAIlC,aAAe,CACjBoC,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,QCjEAe,EATA,kBACb5D,EAAAC,EAAAC,cAACY,EAAD,CACEsB,MAAM,SACNC,KAAMrC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,OAFR,sBCaaqB,EAbC,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,QAAH,OACd9D,EAAAC,EAAAC,cAACY,EAAD,CACEsB,MAAM,UACNC,KAAMrC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,OAELsB,ICkBUC,UAhBG,SAAAnE,GAAqB,IAAAoE,EAAApE,EAAlBqE,YACiEC,MAA5E7C,EAD6B2C,EAC7B3C,SAAUyC,EADmBE,EACnBF,QAASK,EADUH,EACVG,OAAQC,EADEJ,EACFI,WAAYC,EADVL,EACUK,UAAWC,EADrBN,EACqBM,UAE1D,OACEtE,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAD,CAAKpC,MAAM,OACXpC,EAAAC,EAAAC,cAACuE,EAAD,CAAUpD,SAAUA,IACpBrB,EAAAC,EAAAC,cAACwE,EAAD,CAASZ,QAASA,IAClB9D,EAAAC,EAAAC,cAACyE,EAAD,CAAQR,OAAQA,IAChBnE,EAAAC,EAAAC,cAAC0E,EAAD,CAAYR,WAAYA,IACxBpE,EAAAC,EAAAC,cAAC2E,EAAD,CAAWR,UAAWA,IACtBrE,EAAAC,EAAAC,cAAC4E,EAAD,CAAWR,UAAWA","file":"component---src-templates-index-js-31ce92f3adaea408cc0b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Image = ({ style }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"profile-photo.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img\n    fluid={data.placeholderImage.childImageSharp.fluid}\n    alt=\"profile-image\"\n    style={{\n      maxWidth: `100%`,\n      ...style\n    }}\n  />\n}\n\nImage.defaultProps = {\n  style: {}\n}\n\nImage.propTypes = {\n  style: PropTypes.shape({})\n}\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Image from \"./image\"\n\nconst Section = styled.section`\n  padding: 2rem 0;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`\n\nconst ImageWrapper = styled.div`\n  height: 250px;\n  width: 250px;\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nconst Contacts = ({ contacts }) => {\n  const { name, position, location, phone, email, linkedin, github, twitter, telegram } = contacts\n\n  return (\n    <Section>\n      <ImageWrapper>\n        <Image/>\n      </ImageWrapper>\n      <div>\n        <h1>{name}</h1>\n        <h2>{position}</h2>\n        <div>Location: {location}</div>\n        <div>Phone: {phone}</div>\n        <div>Email: {email}</div>\n        <div>Linkedin: {linkedin}</div>\n        <div>Github: {github}</div>\n        <div>Twitter: {twitter}</div>\n        <div>Telegram: {telegram}</div>\n      </div>\n    </Section>\n  )\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    linkedin: PropTypes.string.isRequired,\n    github: PropTypes.string.isRequired,\n    twitter: PropTypes.string.isRequired,\n    telegram: PropTypes.string.isRequired\n  }),\n}\n\nexport default Contacts\n","import styled from \"styled-components\"\n\nexport default styled.div`\n   margin: 0 auto;\n   max-width: 960px;\n   padding: 0 1.0875rem 1.45rem;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Title = styled.h2`\n  display: flex;\n  align-items: center;\n  margin: 0 0 .7rem;\n`\n\nconst Data = styled.div`\n  padding: .7rem 0;\n  margin-bottom: 1rem;\n`;\n\nconst Section = ({ title, icon, children }) => (\n  <section>\n    <Title>{icon}<span>{title}</span></Title>\n    <Data>{children}</Data>\n  </section>\n)\nSection.propTypes = {\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Section\n","import React from \"react\"\nimport { MdSchool } from \"react-icons/md\"\nimport Section from \"./section\"\n\nconst Education = () => (\n  <Section\n    title=\"Education\"\n    icon={<MdSchool/>}\n  >\n    Data about education\n  </Section>\n)\n\nexport default Education\n","import React from \"react\"\nimport { MdWork } from \"react-icons/md\"\nimport Section from \"./section\"\n\nconst Experience = () => (\n  <Section\n    title=\"Experience\"\n    icon={<MdWork/>}\n  >\n    Data about experience\n  </Section>\n)\n\nexport default Experience\n","import React from \"react\"\nimport { MdLanguage } from \"react-icons/md\"\nimport Section from \"./section\"\n\nconst Languages = () => (\n  <Section\n    title=\"Languages\"\n    icon={<MdLanguage/>}\n  >\n    Data about languages\n  </Section>\n)\n\nexport default Languages\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Container from \"./container\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <Container>\n    <main>{children}</main>\n  </Container>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { MdBuild } from \"react-icons/md\"\nimport Section from \"./section\"\n\nconst Skills = () => (\n  <Section\n    title=\"Skills\"\n    icon={<MdBuild/>}\n  >\n    Data about skills\n  </Section>\n)\n\nexport default Skills\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { MdAccountCircle } from \"react-icons/md\"\nimport Section from \"./section\"\n\nconst Summary = ({ summary }) => (\n  <Section\n    title=\"Summary\"\n    icon={<MdAccountCircle/>}\n  >\n    {summary}\n  </Section>\n)\n\nSummary.propTypes = {\n  summary: PropTypes.string.isRequired,\n}\n\nexport default Summary\n","import React from \"react\"\nimport {\n  Layout,\n  Seo,\n  Education,\n  Skills,\n  Experience,\n  Languages,\n  Summary,\n  Contacts,\n} from \"../components\"\n\nconst IndexPage = ({ pageContext }) => {\n  const { contacts, summary, skills, experience, education, languages } = pageContext.index\n\n  return (\n    <Layout>\n      <Seo title=\"CV\"/>\n      <Contacts contacts={contacts}/>\n      <Summary summary={summary}/>\n      <Skills skills={skills}/>\n      <Experience experience={experience}/>\n      <Education education={education}/>\n      <Languages languages={languages}/>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}